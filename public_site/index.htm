<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script src="https://d3js.org/topojson.v3.min.js"></script>
  <link href="style.css" rel="stylesheet">
</head>

<body>
  <svg id="main" height=900 width=1100 style="border:1px solid black;margin-bottom: 0;"></svg>
</body>

<script>
  const map = d3.select("#main")
  const margins = { t: 20, r: 30, b: 20, l: 30 }
  const mapWidth = map.attr("width") - margins.l - margins.r
  const mapHeight = map.attr("height") - margins.t - margins.b
  const mainMap = map.append("g")
    .attr("transform", `translate(${margins.l},${margins.t})`)

  let drawMap = async function () {
    let data = await d3.csv("./datasets/zillow_pittsburgh_csv.csv")
    console.log(data);
    let pittcounties = await d3.json("./datasets/pittsburghpaneighborhoods-.json")
    console.log(pittcounties)
    // Creating Penn map
    let projection = d3.geoMercator().fitSize([mapWidth, mapHeight], pittcounties);
    let path = d3.geoPath().projection(projection);
    mainMap.selectAll("path.county").data(pittcounties.features)
      .join("path")
      .attr("class", "county")
      .attr("d", path)

    // zooming interactivity
    var zoom = d3.zoom().scaleExtent([1, 10]).on("zoom", zoomed);
    map.call(zoom);
    var k = 1;
    function zoomed(event) {
      mainMap.attr("transform", event.transform);
      circles.attr("r", 5 / event.transform.k)
      k = event.transform.k
    };

    //House data points
    data.forEach((d, i) => {
      d["coords"] = projection([d['Longitude'], d["Latitude"]]);
    })
    let circles = mainMap.selectAll("circle").data(data)
      .join("circle")
      .attr("class", "circle")
      .attr("r", 5 / k)
      .attr('cx', d => d["coords"][0])
      .attr("cy", d => d["coords"][1])
      .attr("fill", "blue")

    circles.on("mouseover", function (d) {
      let circle = d3.select(this)
      console.log(this.cx)
      circle.attr("r", circle.attr("r") * 1.5)
        .attr("fill", "green")
      mouseover.style("visibility", "visible");
      updateMouseover(circle.datum());
    });

    circles.on("mouseout", function (d) {
      let circle = d3.select(this)
      circle.attr("r", circle.attr("r") / 1.5)
        .attr("fill", "blue")
      mouseover.style("visibility", "hidden");
    })

    let mouseover = map.append("g")
      .attr("class", "mouseover")
      .attr("visibility", "hidden")

    let info = mouseover.append("text")
      .attr("class", "mouseover-text")
      .attr("x", 100)
      .attr("y", 100);
    function updateMouseover(d) {
      AddressInfo = `Address: ${d["Street Address"]}`
      info.text(AddressInfo)
    }
  }
  drawMap();

</script>

</html>